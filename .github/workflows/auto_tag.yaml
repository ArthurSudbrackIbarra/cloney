name: Automatic Tag

# Trigger the workflow when a pull request is closed on the 'main' branch.
on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-22.04

    # Give permissions to modify repository contents.
    permissions:
      contents: write

    steps:
      # Check out the repository.
      - uses: actions/checkout@v3
        with:
          # Check out the specific commit associated with the closed pull request.
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          # Fetch all commit history for tags to work correctly.
          fetch-depth: "0"

      # Run auto-tag in dry-run mode to determine the next version.
      - name: Determine Next Version
        id: determine_next_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          # Do not prepend the 'v' prefix to the tag.
          WITH_V: false
          DRY_RUN: true

      # Get the output of the previous step.
      - name: Export Version Information
        run: |
          export CLONEY_NEXT_VERSION_FULL=${{ steps.determine_next_version.outputs.new_tag }}
          export CLONEY_NEXT_VERSION_MAJOR=$(echo $CLONEY_NEXT_VERSION_FULL | cut -d. -f1)
          export CLONEY_NEXT_VERSION_MINOR=$(echo $CLONEY_NEXT_VERSION_FULL | cut -d. -f2)
          export CLONEY_NEXT_VERSION_PATCH=$(echo $CLONEY_NEXT_VERSION_FULL | cut -d. -f3)

      # Edit the versioninfo.json file to update the version.
      - name: Edit versioninfo.json File
        run: |
          sed -i 's/"Major": -1/"Major": '$CLONEY_NEXT_VERSION_MAJOR'/' versioninfo.json
          sed -i 's/"Minor": -1/"Minor": '$CLONEY_NEXT_VERSION_MINOR'/' versioninfo.json
          sed -i 's/"Patch": -1/"Patch": '$CLONEY_NEXT_VERSION_PATCH'/' versioninfo.json
          sed -i 's/"ProductVersion": "X.X.X"/"ProductVersion": "$CLONEY_NEXT_VERSION_FULL"/' versioninfo.json
          cat versioninfo.json

      # Edit the pkg/config/config.go file to update the version.
      - name: Edit pkg/config/config.go File
        run: |
          sed -i 's/AppVersion: "X.X.X"/AppVersion: "$CLONEY_NEXT_VERSION_FULL"/' pkg/config/config.go
          cat pkg/config/config.go

      # Edit the installation/install.sh file to update the version.
      - name: Edit installation/install.sh File
        run: |
          sed -i 's/CLONEY_VERSION="X.X.X"/CLONEY_VERSION="$CLONEY_NEXT_VERSION_FULL"/' installation/install.sh
          cat installation/install.sh

      # Use the GitHub Tag Action to create tags.
      - name: Bump Version and Push Tag.
        uses: anothrNick/github-tag-action@1.64.0
        env:
          # Use a personal access token to push the tag.
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          # Do not prepend the 'v' prefix to the tag.
          WITH_V: false
